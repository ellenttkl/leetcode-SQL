Table: Logs

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| log_id        | int     |
+---------------+---------+
id is the primary key for this table.
Each row of this table contains the ID in a log Table.
Since some IDs have been removed from Logs. Write an SQL query to find the start and end number of continuous ranges in table Logs.

Order the result table by start_id.

The query result format is in the following example:

Logs table:
+------------+
| log_id     |
+------------+
| 1          |
| 2          |
| 3          |
| 7          |
| 8          |
| 10         |
+------------+

Result table:
+------------+--------------+
| start_id   | end_id       |
+------------+--------------+
| 1          | 3            |
| 7          | 8            |
| 10         | 10           |
+------------+--------------+
The result table should contain all ranges in table Logs.
From 1 to 3 is contained in the table.
From 4 to 6 is missing in the table
From 7 to 8 is contained in the table.
Number 9 is missing in the table.
Number 10 is contained in the table.

SOLUTION:

select u.start_id,v.end_id 
from (select row_number() over (order by s.start_id) as row_num,s.start_id
      from (select (case when log_id-1 not in (select log_id from logs) then log_id end) as start_id,
	                 (case when log_id+1 not in (select log_id from logs) then log_id end) as end_id
            from logs) as s
      where s.start_id is not null) as u
join
     (select row_number() over (order by t.end_id) as row_num,t.end_id
      from (select (case when log_id-1 not in (select log_id from logs) then log_id end) as start_id,
	                 (case when log_id+1 not in (select log_id from logs) then log_id end) as end_id
            from logs) as t
      where t.end_id is not null) as v
on u.row_num=v.row_num
order by u.start_id,v.end_id;




       
